{"version":3,"sources":["components/TopBar.js","components/Menu.js","components/PhotoTiles.js","components/PhotoDisplay.js","tileData.js","App.js","serviceWorker.js","index.js"],"names":["TopBar","props","react_default","a","createElement","id","className","onClick","src","width","alt","Menu","menuOverlayClass","isOpen","href","target","rel","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","height","selectedStyle","opacity","PhotoTiles","classes","GridList","cellHeight","cols","tileData","map","tile","GridListTile","key","img","thumb","title","style","selectedTile","PhotoDisplay","displayClass","isFullScreen","photoPath","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","photos","selectedPhoto","isMenuOpen","setState","e","prevState","_this2","photoOverlayClass","components_TopBar","handleMenuClick","components_Menu","components_PhotoTiles","handleTileClick","components_PhotoDisplay","handlePhotoClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0aa9698b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TopBar.css';\r\n\r\nfunction TopBar(props) {\r\n  return (\r\n    <div id=\"top-bar\">\r\n      <div className=\"top-bar-content\">\r\n        <i id=\"menu-bars\" className=\"fas fa-bars\" onClick={() => props.onClick()}></i>\r\n        <img src=\"images/brand/voohoo-black.png\" width=\"100\" alt=\"voohoo brand\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport './Menu.css';\r\n\r\nfunction Menu(props) {\r\n  const menuOverlayClass = props.isOpen ? 'show' : '';\r\n\r\n  return (\r\n    <div\r\n      id=\"menu-overlay\"\r\n      className={menuOverlayClass}\r\n    >\r\n      <div className=\"vertical-align\">\r\n        <h3>\r\n          <a\r\n            href=\"https://www.instagram.com/voo.hoo/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <div className=\"tooltip\">\r\n              <span className=\"tooltip-text\">Instagram</span>\r\n              <img src=\"images/logos/instagram.png\" width=\"40\" alt=\"Instagram link\" />\r\n            </div>\r\n          </a>\r\n        </h3>\r\n        <h3>\r\n          <a\r\n            href=\"https://www.flickr.com/photos/voohoo/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <div className=\"tooltip\">\r\n              <span className=\"tooltip-text\">Flickr</span>\r\n              <img src=\"images/logos/flickr.png\" width=\"40\" alt=\"Flickr link\" />\r\n            </div>\r\n          </a>\r\n        </h3>\r\n        <h3>\r\n          <a href=\"mailto:vuhuypham99@gmail.com\">\r\n            <div className=\"tooltip\">\r\n              <span className=\"tooltip-text\">vuhuypham99@gmail.com</span>\r\n              <img src=\"images/logos/gmail.png\" width=\"40\" alt=\"vuhuypham99@gmail.com email link\" />\r\n            </div>\r\n          </a>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n  },\r\n  gridList: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst selectedStyle = {\r\n  opacity: 0.3\r\n};\r\n\r\nfunction PhotoTiles(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n        {props.tileData.map(tile => (\r\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n            <img\r\n              src={tile.thumb}\r\n              alt={tile.title}\r\n              style={props.selectedTile === tile.img ? selectedStyle : {}}\r\n              onClick={() => props.onClick(tile.img)}\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoTiles;","import React from 'react';\r\nimport './PhotoDisplay.css';\r\n\r\nfunction PhotoDisplay(props) {\r\n  const displayClass =\r\n    props.isFullScreen ? \"photo-container full-screen\" : \"photo-container\";\r\n\r\n  return (\r\n    <div className={displayClass}>\r\n      <img\r\n        src={props.photoPath}\r\n        className=\"photo-display\"\r\n        alt=\"Displayed\"\r\n        onClick={() => props.onClick()}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoDisplay;\r\n","const tileData = [\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48920271631_5423886c56_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48920271631_4a66857810_w.jpg',\r\n    title: 'Twin Peaks Sunrise',\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48920271946_c4de93344d_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48920271946_af2b1aeb16_w.jpg',\r\n    title: 'Runner Silhouettes',\r\n    cols: 1,\r\n  },\r\n  // {\r\n  //   img: 'https://live.staticflickr.com/65535/48919737133_30d569d561_o.jpg',\r\n  //   thumb: 'https://live.staticflickr.com/65535/48919737133_30d569d561_o.jpg',\r\n  //   title: 'Twin Peaks Sunrise Portrait',\r\n  //   cols: 1,\r\n  // },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48920271916_5ac25ac08b_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48920271916_f07cd6af4d_w.jpg',\r\n    title: 'Blue Harbor Portrait',\r\n    cols: 1,\r\n  },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48920477312_c116bb4606_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48920477312_0805e0daf5_w.jpg',\r\n    title: 'Crissy Field Sunrise',\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48920477442_9a33eefd7d_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48920477442_75c0bef927_w.jpg',\r\n    title: 'The Killer (1989)',\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48919737288_9cf0b4eda3_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48919737288_2860fb7174_w.jpg',\r\n    title: 'Zion River',\r\n    cols: 1,\r\n  },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48920272321_34dfef7489_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48920272321_9ccd03f53c_w.jpg',\r\n    title: 'S4 Zion',\r\n    cols: 1,\r\n  },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48919737343_bba844d812_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48919737343_f42a9dec64_w.jpg',\r\n    title: 'Zion Peak Sunset',\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48920478077_aab12f170c_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48920478077_35e850ae0a_w.jpg',\r\n    title: 'Blue Dunes',\r\n    cols: 1,\r\n  },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48920272811_8452a6db45_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48920272811_aefeb6eee5_w.jpg',\r\n    title: 'Windswept Sand',\r\n    cols: 1,\r\n  },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48920272956_ccedbe3efa_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48920272956_978d66fb89_w.jpg',\r\n    title: 'Sand Ridge Glow',\r\n    cols: 1,\r\n  },\r\n  {\r\n    img: 'https://live.staticflickr.com/65535/48919738163_535782b80a_o.jpg',\r\n    thumb: 'https://live.staticflickr.com/65535/48919738163_5d13bf9733_w.jpg',\r\n    title: 'Sand Dune Moonrise',\r\n    cols: 2,\r\n  }\r\n];\r\n\r\nexport default tileData;","import React from 'react';\nimport './App.css';\n//import Grid from '@material-ui/core/Grid';\nimport TopBar from './components/TopBar';\nimport Menu from './components/Menu';\nimport PhotoTiles from './components/PhotoTiles';\nimport PhotoDisplay from './components/PhotoDisplay';\nimport tileData from './tileData';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photos: tileData,\n      selectedPhoto: '',\n      isFullScreen: false,\n      isMenuOpen: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      selectedPhoto: this.state.photos[0].img\n    });\n  }\n\n  handleTileClick(e) {\n    this.setState({\n      selectedPhoto: e\n    });\n  }\n\n  handlePhotoClick() {\n    this.setState(prevState => ({\n      isFullScreen: !prevState.isFullScreen\n    }));\n  }\n\n  handleMenuClick() {\n    this.setState(prevState => ({\n      isMenuOpen: !prevState.isMenuOpen\n    }));\n  }\n\n  render() {\n    const photoOverlayClass = this.state.isFullScreen ? 'show' : '';\n\n    return (\n      <div>\n        <div className=\"app-container\">\n          <TopBar onClick={() => this.handleMenuClick()} />\n          <Menu isOpen={this.state.isMenuOpen} />\n          <PhotoTiles\n            tileData={tileData}\n            selectedTile={this.state.selectedPhoto}\n            onClick={(e) => this.handleTileClick(e)}\n          />\n          <PhotoDisplay\n            photoPath={this.state.selectedPhoto}\n            isFullScreen={this.state.isFullScreen}\n            onClick={() => this.handlePhotoClick()}\n          />\n        </div>\n        <div id=\"photo-display-overlay\" className={photoOverlayClass}></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}